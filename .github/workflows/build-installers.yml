name: Build Installers for The Labrynth

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-dashboard-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller
          python -m pip install wget
          Invoke-WebRequest -Uri https://github.com/Otis-Lab-MUSC/reacher/releases/download/v1.1.1-beta/reacher-1.1.1-py3-none-any.whl -OutFile reacher-1.1.1-py3-none-any.whl
          python -m pip install reacher-1.1.1-py3-none-any.whl

      - name: Build with PyInstaller
        working-directory: ui
        run: pyinstaller setup.spec
      - name: Install Inno Setup
        run: choco install innosetup
      - name: Build Installer
        working-directory: ui
        run: |
          iscc /O"dist" /F"labrynth_x64" setup.iss
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: labrynth_x64.exe
          path: ui/dist/labrynth_x64.exe

  build-dashboard-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller
          curl -L -o reacher-1.1.1-py3-none-any.whl https://github.com/Otis-Lab-MUSC/reacher/releases/download/v1.1.1-beta/reacher-1.1.1-py3-none-any.whl
          python -m pip install reacher-1.1.1-py3-none-any.whl

      - name: Build with PyInstaller
        working-directory: ui
        run: pyinstaller setup.spec
      - name: Create DMG
        run: |
          hdiutil create -volname "Labrynth Installer" -srcfolder "ui/dist/Labrynth.app" -ov -format UDZO labrynth_x64.dmg
      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: labrynth_x64.dmg
          path: labrynth_x64.dmg

  build-dashboard-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller
          curl -L -o reacher-1.1.1-py3-none-any.whl https://github.com/Otis-Lab-MUSC/reacher/releases/download/v1.1.1-beta/reacher-1.1.1-py3-none-any.whl
          python -m pip install reacher-1.1.1-py3-none-any.whl
          
      - name: Build with PyInstaller
        working-directory: ui
        run: pyinstaller setup.spec
      - name: Create DEB structure
        run: |
          mkdir -p labrynth_amd64/DEBIAN
          mkdir -p labrynth_amd64/opt/labrynth
          mkdir -p labrynth_amd64/usr/local/bin
          echo "Package: labrynth
          Version: 1.0.1
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Josh Boquiren <thejoshbq.proton@.me>
          Description: Labrynth - A dashboard application" > labrynth_amd64/DEBIAN/control
          cp -r ui/dist/labrynth/* labrynth_amd64/opt/labrynth/
          chmod +x labrynth_amd64/opt/labrynth/labrynth
          ln -s /opt/labrynth/labrynth labrynth_amd64/usr/local/bin/labrynth
      - name: Build DEB package
        run: dpkg-deb --build labrynth_amd64
      - name: Upload DEB
        uses: actions/upload-artifact@v4
        with:
          name: labrynth_amd64.deb
          path: labrynth_amd64.deb

  release:
    needs: [build-dashboard-windows, build-dashboard-macos, build-dashboard-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Delete existing release and tag
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: 'v1.0.1'
              });
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id
              });
            } catch (error) {
              if (error.status !== 404) throw error;
            }
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/v1.0.1'
              });
            } catch (error) {
              if (error.status !== 404) throw error;
            }

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.1
          release_name: Release v1.0.1
          draft: false
          prerelease: false

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: labrynth_x64.exe
          path: dist/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: labrynth_x64.dmg
          path: dist/macos

      - name: Download Dashboard Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: labrynth_amd64.deb
          path: dist/linux-dashboard

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/windows/labrynth_x64.exe
          asset_name: labrynth_x64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/macos/labrynth_x64.dmg
          asset_name: labrynth_x64.dmg
          asset_content_type: application/x-diskcopy

      - name: Upload Dashboard Linux DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/linux-dashboard/labrynth_amd64.deb
          asset_name: labrynth_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
